// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Path status - current state of a connection path
type PathStatus int32

const (
	PathStatus_PATH_UNKNOWN       PathStatus = 0
	PathStatus_PATH_ACTIVE        PathStatus = 1 // Path is active and healthy
	PathStatus_PATH_DEAD          PathStatus = 2 // Path is dead/unreachable
	PathStatus_PATH_CONNECTING    PathStatus = 3 // Path is being established
	PathStatus_PATH_DISCONNECTING PathStatus = 4 // Path is being closed
	PathStatus_PATH_DEGRADED      PathStatus = 5 // Path has performance issues
	PathStatus_PATH_RECOVERING    PathStatus = 6 // Path is recovering from issues
	PathStatus_PATH_SUSPENDED     PathStatus = 7 // Path is temporarily suspended
)

// Enum value maps for PathStatus.
var (
	PathStatus_name = map[int32]string{
		0: "PATH_UNKNOWN",
		1: "PATH_ACTIVE",
		2: "PATH_DEAD",
		3: "PATH_CONNECTING",
		4: "PATH_DISCONNECTING",
		5: "PATH_DEGRADED",
		6: "PATH_RECOVERING",
		7: "PATH_SUSPENDED",
	}
	PathStatus_value = map[string]int32{
		"PATH_UNKNOWN":       0,
		"PATH_ACTIVE":        1,
		"PATH_DEAD":          2,
		"PATH_CONNECTING":    3,
		"PATH_DISCONNECTING": 4,
		"PATH_DEGRADED":      5,
		"PATH_RECOVERING":    6,
		"PATH_SUSPENDED":     7,
	}
)

func (x PathStatus) Enum() *PathStatus {
	p := new(PathStatus)
	*p = x
	return p
}

func (x PathStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[0].Descriptor()
}

func (PathStatus) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[0]
}

func (x PathStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathStatus.Descriptor instead.
func (PathStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

// Congestion control algorithms
type CongestionAlgorithm int32

const (
	CongestionAlgorithm_CUBIC    CongestionAlgorithm = 0
	CongestionAlgorithm_BBR      CongestionAlgorithm = 1
	CongestionAlgorithm_RENO     CongestionAlgorithm = 2
	CongestionAlgorithm_NEW_RENO CongestionAlgorithm = 3
)

// Enum value maps for CongestionAlgorithm.
var (
	CongestionAlgorithm_name = map[int32]string{
		0: "CUBIC",
		1: "BBR",
		2: "RENO",
		3: "NEW_RENO",
	}
	CongestionAlgorithm_value = map[string]int32{
		"CUBIC":    0,
		"BBR":      1,
		"RENO":     2,
		"NEW_RENO": 3,
	}
)

func (x CongestionAlgorithm) Enum() *CongestionAlgorithm {
	p := new(CongestionAlgorithm)
	*p = x
	return p
}

func (x CongestionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CongestionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[1].Descriptor()
}

func (CongestionAlgorithm) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[1]
}

func (x CongestionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CongestionAlgorithm.Descriptor instead.
func (CongestionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

// Session state
type SessionState int32

const (
	SessionState_SESSION_INITIALIZING SessionState = 0 // Session is being initialized
	SessionState_SESSION_ACTIVE       SessionState = 1 // Session is active
	SessionState_SESSION_CLOSING      SessionState = 2 // Session is being closed
	SessionState_SESSION_CLOSED       SessionState = 3 // Session is closed
	SessionState_SESSION_ERROR        SessionState = 4 // Session is in error state
)

// Enum value maps for SessionState.
var (
	SessionState_name = map[int32]string{
		0: "SESSION_INITIALIZING",
		1: "SESSION_ACTIVE",
		2: "SESSION_CLOSING",
		3: "SESSION_CLOSED",
		4: "SESSION_ERROR",
	}
	SessionState_value = map[string]int32{
		"SESSION_INITIALIZING": 0,
		"SESSION_ACTIVE":       1,
		"SESSION_CLOSING":      2,
		"SESSION_CLOSED":       3,
		"SESSION_ERROR":        4,
	}
)

func (x SessionState) Enum() *SessionState {
	p := new(SessionState)
	*p = x
	return p
}

func (x SessionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[2].Descriptor()
}

func (SessionState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[2]
}

func (x SessionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionState.Descriptor instead.
func (SessionState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

// Stream types
type StreamType int32

const (
	StreamType_STREAM_BIDIRECTIONAL  StreamType = 0
	StreamType_STREAM_UNIDIRECTIONAL StreamType = 1
	StreamType_STREAM_CONTROL        StreamType = 2
	StreamType_STREAM_DATA           StreamType = 3
)

// Enum value maps for StreamType.
var (
	StreamType_name = map[int32]string{
		0: "STREAM_BIDIRECTIONAL",
		1: "STREAM_UNIDIRECTIONAL",
		2: "STREAM_CONTROL",
		3: "STREAM_DATA",
	}
	StreamType_value = map[string]int32{
		"STREAM_BIDIRECTIONAL":  0,
		"STREAM_UNIDIRECTIONAL": 1,
		"STREAM_CONTROL":        2,
		"STREAM_DATA":           3,
	}
)

func (x StreamType) Enum() *StreamType {
	p := new(StreamType)
	*p = x
	return p
}

func (x StreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[3].Descriptor()
}

func (StreamType) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[3]
}

func (x StreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamType.Descriptor instead.
func (StreamType) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

// Stream states
type StreamState int32

const (
	StreamState_STREAM_IDLE               StreamState = 0
	StreamState_STREAM_OPEN               StreamState = 1
	StreamState_STREAM_HALF_CLOSED_LOCAL  StreamState = 2
	StreamState_STREAM_HALF_CLOSED_REMOTE StreamState = 3
	StreamState_STREAM_CLOSED             StreamState = 4
	StreamState_STREAM_RESET_SENT         StreamState = 5
	StreamState_STREAM_RESET_RECEIVED     StreamState = 6
)

// Enum value maps for StreamState.
var (
	StreamState_name = map[int32]string{
		0: "STREAM_IDLE",
		1: "STREAM_OPEN",
		2: "STREAM_HALF_CLOSED_LOCAL",
		3: "STREAM_HALF_CLOSED_REMOTE",
		4: "STREAM_CLOSED",
		5: "STREAM_RESET_SENT",
		6: "STREAM_RESET_RECEIVED",
	}
	StreamState_value = map[string]int32{
		"STREAM_IDLE":               0,
		"STREAM_OPEN":               1,
		"STREAM_HALF_CLOSED_LOCAL":  2,
		"STREAM_HALF_CLOSED_REMOTE": 3,
		"STREAM_CLOSED":             4,
		"STREAM_RESET_SENT":         5,
		"STREAM_RESET_RECEIVED":     6,
	}
)

func (x StreamState) Enum() *StreamState {
	p := new(StreamState)
	*p = x
	return p
}

func (x StreamState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[4].Descriptor()
}

func (StreamState) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[4]
}

func (x StreamState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamState.Descriptor instead.
func (StreamState) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

// Error severity levels
type ErrorSeverity int32

const (
	ErrorSeverity_SEVERITY_INFO     ErrorSeverity = 0
	ErrorSeverity_SEVERITY_WARNING  ErrorSeverity = 1
	ErrorSeverity_SEVERITY_ERROR    ErrorSeverity = 2
	ErrorSeverity_SEVERITY_CRITICAL ErrorSeverity = 3
	ErrorSeverity_SEVERITY_FATAL    ErrorSeverity = 4
)

// Enum value maps for ErrorSeverity.
var (
	ErrorSeverity_name = map[int32]string{
		0: "SEVERITY_INFO",
		1: "SEVERITY_WARNING",
		2: "SEVERITY_ERROR",
		3: "SEVERITY_CRITICAL",
		4: "SEVERITY_FATAL",
	}
	ErrorSeverity_value = map[string]int32{
		"SEVERITY_INFO":     0,
		"SEVERITY_WARNING":  1,
		"SEVERITY_ERROR":    2,
		"SEVERITY_CRITICAL": 3,
		"SEVERITY_FATAL":    4,
	}
)

func (x ErrorSeverity) Enum() *ErrorSeverity {
	p := new(ErrorSeverity)
	*p = x
	return p
}

func (x ErrorSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[5].Descriptor()
}

func (ErrorSeverity) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[5]
}

func (x ErrorSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorSeverity.Descriptor instead.
func (ErrorSeverity) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

// Address families
type AddressFamily int32

const (
	AddressFamily_UNSPECIFIED AddressFamily = 0
	AddressFamily_IPV4        AddressFamily = 1
	AddressFamily_IPV6        AddressFamily = 2
	AddressFamily_UNIX        AddressFamily = 3
)

// Enum value maps for AddressFamily.
var (
	AddressFamily_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "IPV4",
		2: "IPV6",
		3: "UNIX",
	}
	AddressFamily_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IPV4":        1,
		"IPV6":        2,
		"UNIX":        3,
	}
)

func (x AddressFamily) Enum() *AddressFamily {
	p := new(AddressFamily)
	*p = x
	return p
}

func (x AddressFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddressFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[6].Descriptor()
}

func (AddressFamily) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[6]
}

func (x AddressFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddressFamily.Descriptor instead.
func (AddressFamily) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

// Health status
type HealthStatus int32

const (
	HealthStatus_HEALTH_HEALTHY   HealthStatus = 0
	HealthStatus_HEALTH_DEGRADED  HealthStatus = 1
	HealthStatus_HEALTH_UNHEALTHY HealthStatus = 2
	HealthStatus_HEALTH_UNKNOWN   HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_HEALTHY",
		1: "HEALTH_DEGRADED",
		2: "HEALTH_UNHEALTHY",
		3: "HEALTH_UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_HEALTHY":   0,
		"HEALTH_DEGRADED":  1,
		"HEALTH_UNHEALTHY": 2,
		"HEALTH_UNKNOWN":   3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_proto_enumTypes[7].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_common_common_proto_enumTypes[7]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

// Path information - complete information about a connection path
type PathInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathId        string                 `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`                                                                 // Unique path identifier
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`                                                                             // Server address (host:port)
	IsPrimary     bool                   `protobuf:"varint,3,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`                                                       // Whether this is the primary path
	Status        PathStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=kwik.common.PathStatus" json:"status,omitempty"`                                                  // Current path status
	CreatedAt     uint64                 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                       // Path creation timestamp
	LastActive    uint64                 `protobuf:"varint,6,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`                                                    // Last activity timestamp
	Metrics       *PathMetrics           `protobuf:"bytes,7,opt,name=metrics,proto3" json:"metrics,omitempty"`                                                                             // Current path performance metrics
	Capabilities  *PathCapabilities      `protobuf:"bytes,8,opt,name=capabilities,proto3" json:"capabilities,omitempty"`                                                                   // Path capabilities
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional path metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathInfo) Reset() {
	*x = PathInfo{}
	mi := &file_common_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathInfo) ProtoMessage() {}

func (x *PathInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathInfo.ProtoReflect.Descriptor instead.
func (*PathInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *PathInfo) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *PathInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PathInfo) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *PathInfo) GetStatus() PathStatus {
	if x != nil {
		return x.Status
	}
	return PathStatus_PATH_UNKNOWN
}

func (x *PathInfo) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PathInfo) GetLastActive() uint64 {
	if x != nil {
		return x.LastActive
	}
	return 0
}

func (x *PathInfo) GetMetrics() *PathMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *PathInfo) GetCapabilities() *PathCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *PathInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Path performance metrics
type PathMetrics struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RttMs           uint64                 `protobuf:"varint,1,opt,name=rtt_ms,json=rttMs,proto3" json:"rtt_ms,omitempty"`                               // Round-trip time in milliseconds
	BandwidthBps    uint64                 `protobuf:"varint,2,opt,name=bandwidth_bps,json=bandwidthBps,proto3" json:"bandwidth_bps,omitempty"`          // Estimated bandwidth in bits per second
	PacketLossRate  float32                `protobuf:"fixed32,3,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"` // Packet loss rate (0.0 to 1.0)
	BytesSent       uint64                 `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`                   // Total bytes sent on this path
	BytesReceived   uint64                 `protobuf:"varint,5,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`       // Total bytes received on this path
	PacketsSent     uint64                 `protobuf:"varint,6,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`             // Total packets sent
	PacketsReceived uint64                 `protobuf:"varint,7,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"` // Total packets received
	Retransmissions uint64                 `protobuf:"varint,8,opt,name=retransmissions,proto3" json:"retransmissions,omitempty"`                        // Number of retransmissions
	LastActivity    uint64                 `protobuf:"varint,9,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`          // Timestamp of last activity
	Congestion      *CongestionState       `protobuf:"bytes,10,opt,name=congestion,proto3" json:"congestion,omitempty"`                                  // Congestion control state
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PathMetrics) Reset() {
	*x = PathMetrics{}
	mi := &file_common_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathMetrics) ProtoMessage() {}

func (x *PathMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathMetrics.ProtoReflect.Descriptor instead.
func (*PathMetrics) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *PathMetrics) GetRttMs() uint64 {
	if x != nil {
		return x.RttMs
	}
	return 0
}

func (x *PathMetrics) GetBandwidthBps() uint64 {
	if x != nil {
		return x.BandwidthBps
	}
	return 0
}

func (x *PathMetrics) GetPacketLossRate() float32 {
	if x != nil {
		return x.PacketLossRate
	}
	return 0
}

func (x *PathMetrics) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *PathMetrics) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *PathMetrics) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *PathMetrics) GetPacketsReceived() uint64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *PathMetrics) GetRetransmissions() uint64 {
	if x != nil {
		return x.Retransmissions
	}
	return 0
}

func (x *PathMetrics) GetLastActivity() uint64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

func (x *PathMetrics) GetCongestion() *CongestionState {
	if x != nil {
		return x.Congestion
	}
	return nil
}

// Congestion control state
type CongestionState struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CongestionWindow   uint64                 `protobuf:"varint,1,opt,name=congestion_window,json=congestionWindow,proto3" json:"congestion_window,omitempty"`         // Current congestion window size
	SlowStartThreshold uint64                 `protobuf:"varint,2,opt,name=slow_start_threshold,json=slowStartThreshold,proto3" json:"slow_start_threshold,omitempty"` // Slow start threshold
	Algorithm          CongestionAlgorithm    `protobuf:"varint,3,opt,name=algorithm,proto3,enum=kwik.common.CongestionAlgorithm" json:"algorithm,omitempty"`          // Congestion control algorithm
	BytesInFlight      uint64                 `protobuf:"varint,4,opt,name=bytes_in_flight,json=bytesInFlight,proto3" json:"bytes_in_flight,omitempty"`                // Bytes currently in flight
	MaxDatagramSize    uint64                 `protobuf:"varint,5,opt,name=max_datagram_size,json=maxDatagramSize,proto3" json:"max_datagram_size,omitempty"`          // Maximum datagram size
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CongestionState) Reset() {
	*x = CongestionState{}
	mi := &file_common_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CongestionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CongestionState) ProtoMessage() {}

func (x *CongestionState) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CongestionState.ProtoReflect.Descriptor instead.
func (*CongestionState) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *CongestionState) GetCongestionWindow() uint64 {
	if x != nil {
		return x.CongestionWindow
	}
	return 0
}

func (x *CongestionState) GetSlowStartThreshold() uint64 {
	if x != nil {
		return x.SlowStartThreshold
	}
	return 0
}

func (x *CongestionState) GetAlgorithm() CongestionAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return CongestionAlgorithm_CUBIC
}

func (x *CongestionState) GetBytesInFlight() uint64 {
	if x != nil {
		return x.BytesInFlight
	}
	return 0
}

func (x *CongestionState) GetMaxDatagramSize() uint64 {
	if x != nil {
		return x.MaxDatagramSize
	}
	return 0
}

// Path capabilities - what features a path supports
type PathCapabilities struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MaxPacketSize     uint32                 `protobuf:"varint,1,opt,name=max_packet_size,json=maxPacketSize,proto3" json:"max_packet_size,omitempty"`           // Maximum packet size supported
	SupportsEcn       bool                   `protobuf:"varint,2,opt,name=supports_ecn,json=supportsEcn,proto3" json:"supports_ecn,omitempty"`                   // Explicit Congestion Notification support
	SupportsMigration bool                   `protobuf:"varint,3,opt,name=supports_migration,json=supportsMigration,proto3" json:"supports_migration,omitempty"` // Connection migration support
	Extensions        []string               `protobuf:"bytes,4,rep,name=extensions,proto3" json:"extensions,omitempty"`                                         // Supported QUIC extensions
	MaxStreams        uint32                 `protobuf:"varint,5,opt,name=max_streams,json=maxStreams,proto3" json:"max_streams,omitempty"`                      // Maximum concurrent streams
	MaxData           uint64                 `protobuf:"varint,6,opt,name=max_data,json=maxData,proto3" json:"max_data,omitempty"`                               // Maximum connection data
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PathCapabilities) Reset() {
	*x = PathCapabilities{}
	mi := &file_common_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathCapabilities) ProtoMessage() {}

func (x *PathCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathCapabilities.ProtoReflect.Descriptor instead.
func (*PathCapabilities) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *PathCapabilities) GetMaxPacketSize() uint32 {
	if x != nil {
		return x.MaxPacketSize
	}
	return 0
}

func (x *PathCapabilities) GetSupportsEcn() bool {
	if x != nil {
		return x.SupportsEcn
	}
	return false
}

func (x *PathCapabilities) GetSupportsMigration() bool {
	if x != nil {
		return x.SupportsMigration
	}
	return false
}

func (x *PathCapabilities) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *PathCapabilities) GetMaxStreams() uint32 {
	if x != nil {
		return x.MaxStreams
	}
	return 0
}

func (x *PathCapabilities) GetMaxData() uint64 {
	if x != nil {
		return x.MaxData
	}
	return 0
}

// Session information - complete information about a KWIK session
type SessionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                        // Unique session identifier
	Paths         []*PathInfo            `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`                                                                                 // All paths in this session
	CreatedAt     uint64                 `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                       // Session creation timestamp
	IsClient      bool                   `protobuf:"varint,4,opt,name=is_client,json=isClient,proto3" json:"is_client,omitempty"`                                                          // Whether this is a client session
	State         SessionState           `protobuf:"varint,5,opt,name=state,proto3,enum=kwik.common.SessionState" json:"state,omitempty"`                                                  // Current session state
	Metrics       *SessionMetrics        `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`                                                                             // Session-level metrics
	Config        *SessionConfig         `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`                                                                               // Session configuration
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional session metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_common_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionInfo) GetPaths() []*PathInfo {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *SessionInfo) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SessionInfo) GetIsClient() bool {
	if x != nil {
		return x.IsClient
	}
	return false
}

func (x *SessionInfo) GetState() SessionState {
	if x != nil {
		return x.State
	}
	return SessionState_SESSION_INITIALIZING
}

func (x *SessionInfo) GetMetrics() *SessionMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *SessionInfo) GetConfig() *SessionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SessionInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Session-level metrics
type SessionMetrics struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalBytesSent       uint64                 `protobuf:"varint,1,opt,name=total_bytes_sent,json=totalBytesSent,proto3" json:"total_bytes_sent,omitempty"`
	TotalBytesReceived   uint64                 `protobuf:"varint,2,opt,name=total_bytes_received,json=totalBytesReceived,proto3" json:"total_bytes_received,omitempty"`
	TotalPacketsSent     uint64                 `protobuf:"varint,3,opt,name=total_packets_sent,json=totalPacketsSent,proto3" json:"total_packets_sent,omitempty"`
	TotalPacketsReceived uint64                 `protobuf:"varint,4,opt,name=total_packets_received,json=totalPacketsReceived,proto3" json:"total_packets_received,omitempty"`
	ActiveStreams        uint64                 `protobuf:"varint,5,opt,name=active_streams,json=activeStreams,proto3" json:"active_streams,omitempty"`
	TotalStreamsCreated  uint64                 `protobuf:"varint,6,opt,name=total_streams_created,json=totalStreamsCreated,proto3" json:"total_streams_created,omitempty"`
	PathSwitches         uint64                 `protobuf:"varint,7,opt,name=path_switches,json=pathSwitches,proto3" json:"path_switches,omitempty"`                         // Number of times primary path switched
	ConnectionMigrations uint64                 `protobuf:"varint,8,opt,name=connection_migrations,json=connectionMigrations,proto3" json:"connection_migrations,omitempty"` // Number of connection migrations
	Aggregation          *AggregationStats      `protobuf:"bytes,9,opt,name=aggregation,proto3" json:"aggregation,omitempty"`                                                // Data aggregation statistics
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SessionMetrics) Reset() {
	*x = SessionMetrics{}
	mi := &file_common_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMetrics) ProtoMessage() {}

func (x *SessionMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMetrics.ProtoReflect.Descriptor instead.
func (*SessionMetrics) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *SessionMetrics) GetTotalBytesSent() uint64 {
	if x != nil {
		return x.TotalBytesSent
	}
	return 0
}

func (x *SessionMetrics) GetTotalBytesReceived() uint64 {
	if x != nil {
		return x.TotalBytesReceived
	}
	return 0
}

func (x *SessionMetrics) GetTotalPacketsSent() uint64 {
	if x != nil {
		return x.TotalPacketsSent
	}
	return 0
}

func (x *SessionMetrics) GetTotalPacketsReceived() uint64 {
	if x != nil {
		return x.TotalPacketsReceived
	}
	return 0
}

func (x *SessionMetrics) GetActiveStreams() uint64 {
	if x != nil {
		return x.ActiveStreams
	}
	return 0
}

func (x *SessionMetrics) GetTotalStreamsCreated() uint64 {
	if x != nil {
		return x.TotalStreamsCreated
	}
	return 0
}

func (x *SessionMetrics) GetPathSwitches() uint64 {
	if x != nil {
		return x.PathSwitches
	}
	return 0
}

func (x *SessionMetrics) GetConnectionMigrations() uint64 {
	if x != nil {
		return x.ConnectionMigrations
	}
	return 0
}

func (x *SessionMetrics) GetAggregation() *AggregationStats {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

// Data aggregation statistics
type AggregationStats struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	FramesAggregated      uint64                 `protobuf:"varint,1,opt,name=frames_aggregated,json=framesAggregated,proto3" json:"frames_aggregated,omitempty"`                 // Total frames aggregated
	PacketsAggregated     uint64                 `protobuf:"varint,2,opt,name=packets_aggregated,json=packetsAggregated,proto3" json:"packets_aggregated,omitempty"`              // Total packets aggregated
	ReorderEvents         uint64                 `protobuf:"varint,3,opt,name=reorder_events,json=reorderEvents,proto3" json:"reorder_events,omitempty"`                          // Number of reordering events
	DuplicateFrames       uint64                 `protobuf:"varint,4,opt,name=duplicate_frames,json=duplicateFrames,proto3" json:"duplicate_frames,omitempty"`                    // Number of duplicate frames detected
	AggregationEfficiency float32                `protobuf:"fixed32,5,opt,name=aggregation_efficiency,json=aggregationEfficiency,proto3" json:"aggregation_efficiency,omitempty"` // Aggregation efficiency ratio
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *AggregationStats) Reset() {
	*x = AggregationStats{}
	mi := &file_common_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationStats) ProtoMessage() {}

func (x *AggregationStats) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationStats.ProtoReflect.Descriptor instead.
func (*AggregationStats) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{6}
}

func (x *AggregationStats) GetFramesAggregated() uint64 {
	if x != nil {
		return x.FramesAggregated
	}
	return 0
}

func (x *AggregationStats) GetPacketsAggregated() uint64 {
	if x != nil {
		return x.PacketsAggregated
	}
	return 0
}

func (x *AggregationStats) GetReorderEvents() uint64 {
	if x != nil {
		return x.ReorderEvents
	}
	return 0
}

func (x *AggregationStats) GetDuplicateFrames() uint64 {
	if x != nil {
		return x.DuplicateFrames
	}
	return 0
}

func (x *AggregationStats) GetAggregationEfficiency() float32 {
	if x != nil {
		return x.AggregationEfficiency
	}
	return 0
}

// Session configuration
type SessionConfig struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MaxPaths              uint32                 `protobuf:"varint,1,opt,name=max_paths,json=maxPaths,proto3" json:"max_paths,omitempty"`                                            // Maximum number of paths
	OptimalStreamsPerReal uint32                 `protobuf:"varint,2,opt,name=optimal_streams_per_real,json=optimalStreamsPerReal,proto3" json:"optimal_streams_per_real,omitempty"` // Optimal logical streams per real stream
	MaxStreamsPerReal     uint32                 `protobuf:"varint,3,opt,name=max_streams_per_real,json=maxStreamsPerReal,proto3" json:"max_streams_per_real,omitempty"`             // Maximum logical streams per real stream
	IdleTimeout           uint64                 `protobuf:"varint,4,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`                                   // Idle timeout in seconds
	MaxPacketSize         uint64                 `protobuf:"varint,5,opt,name=max_packet_size,json=maxPacketSize,proto3" json:"max_packet_size,omitempty"`                           // Maximum packet size
	EnableAggregation     bool                   `protobuf:"varint,6,opt,name=enable_aggregation,json=enableAggregation,proto3" json:"enable_aggregation,omitempty"`                 // Whether to enable data aggregation
	EnableMigration       bool                   `protobuf:"varint,7,opt,name=enable_migration,json=enableMigration,proto3" json:"enable_migration,omitempty"`                       // Whether to enable connection migration
	Features              []string               `protobuf:"bytes,8,rep,name=features,proto3" json:"features,omitempty"`                                                             // Enabled features
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SessionConfig) Reset() {
	*x = SessionConfig{}
	mi := &file_common_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionConfig) ProtoMessage() {}

func (x *SessionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionConfig.ProtoReflect.Descriptor instead.
func (*SessionConfig) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{7}
}

func (x *SessionConfig) GetMaxPaths() uint32 {
	if x != nil {
		return x.MaxPaths
	}
	return 0
}

func (x *SessionConfig) GetOptimalStreamsPerReal() uint32 {
	if x != nil {
		return x.OptimalStreamsPerReal
	}
	return 0
}

func (x *SessionConfig) GetMaxStreamsPerReal() uint32 {
	if x != nil {
		return x.MaxStreamsPerReal
	}
	return 0
}

func (x *SessionConfig) GetIdleTimeout() uint64 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

func (x *SessionConfig) GetMaxPacketSize() uint64 {
	if x != nil {
		return x.MaxPacketSize
	}
	return 0
}

func (x *SessionConfig) GetEnableAggregation() bool {
	if x != nil {
		return x.EnableAggregation
	}
	return false
}

func (x *SessionConfig) GetEnableMigration() bool {
	if x != nil {
		return x.EnableMigration
	}
	return false
}

func (x *SessionConfig) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

// Stream information - information about a logical stream
type StreamInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LogicalStreamId uint64                 `protobuf:"varint,1,opt,name=logical_stream_id,json=logicalStreamId,proto3" json:"logical_stream_id,omitempty"`
	PathId          string                 `protobuf:"bytes,2,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"` // Primary path for this stream
	StreamType      StreamType             `protobuf:"varint,3,opt,name=stream_type,json=streamType,proto3,enum=kwik.common.StreamType" json:"stream_type,omitempty"`
	StreamState     StreamState            `protobuf:"varint,4,opt,name=stream_state,json=streamState,proto3,enum=kwik.common.StreamState" json:"stream_state,omitempty"`
	BytesSent       uint64                 `protobuf:"varint,5,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   uint64                 `protobuf:"varint,6,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	CreatedAt       uint64                 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastActivity    uint64                 `protobuf:"varint,8,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	Priority        uint32                 `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
	Metadata        map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamInfo) Reset() {
	*x = StreamInfo{}
	mi := &file_common_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInfo) ProtoMessage() {}

func (x *StreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInfo.ProtoReflect.Descriptor instead.
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{8}
}

func (x *StreamInfo) GetLogicalStreamId() uint64 {
	if x != nil {
		return x.LogicalStreamId
	}
	return 0
}

func (x *StreamInfo) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *StreamInfo) GetStreamType() StreamType {
	if x != nil {
		return x.StreamType
	}
	return StreamType_STREAM_BIDIRECTIONAL
}

func (x *StreamInfo) GetStreamState() StreamState {
	if x != nil {
		return x.StreamState
	}
	return StreamState_STREAM_IDLE
}

func (x *StreamInfo) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *StreamInfo) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *StreamInfo) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *StreamInfo) GetLastActivity() uint64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

func (x *StreamInfo) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *StreamInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Error information - structured error reporting
type ErrorInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     string                 `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`                                                      // KWIK error code
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                                                           // Human-readable error message
	Component     string                 `protobuf:"bytes,3,opt,name=component,proto3" json:"component,omitempty"`                                                                       // Component that generated the error
	Timestamp     uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                      // Error timestamp
	Context       map[string]string      `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional error context
	Severity      ErrorSeverity          `protobuf:"varint,6,opt,name=severity,proto3,enum=kwik.common.ErrorSeverity" json:"severity,omitempty"`                                         // Error severity level
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_common_common_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{9}
}

func (x *ErrorInfo) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorInfo) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *ErrorInfo) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ErrorInfo) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ErrorInfo) GetSeverity() ErrorSeverity {
	if x != nil {
		return x.Severity
	}
	return ErrorSeverity_SEVERITY_INFO
}

// Version information - KWIK protocol version
type VersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         uint32                 `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`
	Minor         uint32                 `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`
	Patch         uint32                 `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`
	Build         string                 `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`
	Features      []string               `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"` // Supported features in this version
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	mi := &file_common_common_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{10}
}

func (x *VersionInfo) GetMajor() uint32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *VersionInfo) GetMinor() uint32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *VersionInfo) GetPatch() uint32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *VersionInfo) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *VersionInfo) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

// Timestamp - standardized timestamp format
type Timestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seconds       int64                  `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"` // Seconds since Unix epoch
	Nanos         int32                  `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`     // Nanoseconds within the second
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	mi := &file_common_common_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{11}
}

func (x *Timestamp) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Timestamp) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

// Address information - network address details
type AddressInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`                                     // Hostname or IP address
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`                                    // Port number
	Family        AddressFamily          `protobuf:"varint,3,opt,name=family,proto3,enum=kwik.common.AddressFamily" json:"family,omitempty"` // Address family
	Interface     string                 `protobuf:"bytes,4,opt,name=interface,proto3" json:"interface,omitempty"`                           // Network interface (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddressInfo) Reset() {
	*x = AddressInfo{}
	mi := &file_common_common_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressInfo) ProtoMessage() {}

func (x *AddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressInfo.ProtoReflect.Descriptor instead.
func (*AddressInfo) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{12}
}

func (x *AddressInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *AddressInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AddressInfo) GetFamily() AddressFamily {
	if x != nil {
		return x.Family
	}
	return AddressFamily_UNSPECIFIED
}

func (x *AddressInfo) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

// Feature flags - runtime feature configuration
type FeatureFlags struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EnableMultipath   bool                   `protobuf:"varint,1,opt,name=enable_multipath,json=enableMultipath,proto3" json:"enable_multipath,omitempty"`
	EnableAggregation bool                   `protobuf:"varint,2,opt,name=enable_aggregation,json=enableAggregation,proto3" json:"enable_aggregation,omitempty"`
	EnableMigration   bool                   `protobuf:"varint,3,opt,name=enable_migration,json=enableMigration,proto3" json:"enable_migration,omitempty"`
	EnableRawPackets  bool                   `protobuf:"varint,4,opt,name=enable_raw_packets,json=enableRawPackets,proto3" json:"enable_raw_packets,omitempty"`
	EnableCompression bool                   `protobuf:"varint,5,opt,name=enable_compression,json=enableCompression,proto3" json:"enable_compression,omitempty"`
	EnableEncryption  bool                   `protobuf:"varint,6,opt,name=enable_encryption,json=enableEncryption,proto3" json:"enable_encryption,omitempty"`
	EnableMetrics     bool                   `protobuf:"varint,7,opt,name=enable_metrics,json=enableMetrics,proto3" json:"enable_metrics,omitempty"`
	EnableDebugging   bool                   `protobuf:"varint,8,opt,name=enable_debugging,json=enableDebugging,proto3" json:"enable_debugging,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *FeatureFlags) Reset() {
	*x = FeatureFlags{}
	mi := &file_common_common_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeatureFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureFlags) ProtoMessage() {}

func (x *FeatureFlags) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureFlags.ProtoReflect.Descriptor instead.
func (*FeatureFlags) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{13}
}

func (x *FeatureFlags) GetEnableMultipath() bool {
	if x != nil {
		return x.EnableMultipath
	}
	return false
}

func (x *FeatureFlags) GetEnableAggregation() bool {
	if x != nil {
		return x.EnableAggregation
	}
	return false
}

func (x *FeatureFlags) GetEnableMigration() bool {
	if x != nil {
		return x.EnableMigration
	}
	return false
}

func (x *FeatureFlags) GetEnableRawPackets() bool {
	if x != nil {
		return x.EnableRawPackets
	}
	return false
}

func (x *FeatureFlags) GetEnableCompression() bool {
	if x != nil {
		return x.EnableCompression
	}
	return false
}

func (x *FeatureFlags) GetEnableEncryption() bool {
	if x != nil {
		return x.EnableEncryption
	}
	return false
}

func (x *FeatureFlags) GetEnableMetrics() bool {
	if x != nil {
		return x.EnableMetrics
	}
	return false
}

func (x *FeatureFlags) GetEnableDebugging() bool {
	if x != nil {
		return x.EnableDebugging
	}
	return false
}

// Health check information
type HealthCheck struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=kwik.common.HealthStatus" json:"status,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp       uint64                 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ComponentHealth []*HealthCheck         `protobuf:"bytes,4,rep,name=component_health,json=componentHealth,proto3" json:"component_health,omitempty"` // Health of sub-components
	Details         map[string]string      `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_common_common_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{14}
}

func (x *HealthCheck) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_HEALTHY
}

func (x *HealthCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheck) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HealthCheck) GetComponentHealth() []*HealthCheck {
	if x != nil {
		return x.ComponentHealth
	}
	return nil
}

func (x *HealthCheck) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_common_common_proto protoreflect.FileDescriptor

const file_common_common_proto_rawDesc = "" +
	"\n" +
	"\x13common/common.proto\x12\vkwik.common\"\xc2\x03\n" +
	"\bPathInfo\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x03 \x01(\bR\tisPrimary\x12/\n" +
	"\x06status\x18\x04 \x01(\x0e2\x17.kwik.common.PathStatusR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x04R\tcreatedAt\x12\x1f\n" +
	"\vlast_active\x18\x06 \x01(\x04R\n" +
	"lastActive\x122\n" +
	"\ametrics\x18\a \x01(\v2\x18.kwik.common.PathMetricsR\ametrics\x12A\n" +
	"\fcapabilities\x18\b \x01(\v2\x1d.kwik.common.PathCapabilitiesR\fcapabilities\x12?\n" +
	"\bmetadata\x18\t \x03(\v2#.kwik.common.PathInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x03\n" +
	"\vPathMetrics\x12\x15\n" +
	"\x06rtt_ms\x18\x01 \x01(\x04R\x05rttMs\x12#\n" +
	"\rbandwidth_bps\x18\x02 \x01(\x04R\fbandwidthBps\x12(\n" +
	"\x10packet_loss_rate\x18\x03 \x01(\x02R\x0epacketLossRate\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x04 \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x05 \x01(\x04R\rbytesReceived\x12!\n" +
	"\fpackets_sent\x18\x06 \x01(\x04R\vpacketsSent\x12)\n" +
	"\x10packets_received\x18\a \x01(\x04R\x0fpacketsReceived\x12(\n" +
	"\x0fretransmissions\x18\b \x01(\x04R\x0fretransmissions\x12#\n" +
	"\rlast_activity\x18\t \x01(\x04R\flastActivity\x12<\n" +
	"\n" +
	"congestion\x18\n" +
	" \x01(\v2\x1c.kwik.common.CongestionStateR\n" +
	"congestion\"\x84\x02\n" +
	"\x0fCongestionState\x12+\n" +
	"\x11congestion_window\x18\x01 \x01(\x04R\x10congestionWindow\x120\n" +
	"\x14slow_start_threshold\x18\x02 \x01(\x04R\x12slowStartThreshold\x12>\n" +
	"\talgorithm\x18\x03 \x01(\x0e2 .kwik.common.CongestionAlgorithmR\talgorithm\x12&\n" +
	"\x0fbytes_in_flight\x18\x04 \x01(\x04R\rbytesInFlight\x12*\n" +
	"\x11max_datagram_size\x18\x05 \x01(\x04R\x0fmaxDatagramSize\"\xe8\x01\n" +
	"\x10PathCapabilities\x12&\n" +
	"\x0fmax_packet_size\x18\x01 \x01(\rR\rmaxPacketSize\x12!\n" +
	"\fsupports_ecn\x18\x02 \x01(\bR\vsupportsEcn\x12-\n" +
	"\x12supports_migration\x18\x03 \x01(\bR\x11supportsMigration\x12\x1e\n" +
	"\n" +
	"extensions\x18\x04 \x03(\tR\n" +
	"extensions\x12\x1f\n" +
	"\vmax_streams\x18\x05 \x01(\rR\n" +
	"maxStreams\x12\x19\n" +
	"\bmax_data\x18\x06 \x01(\x04R\amaxData\"\xb2\x03\n" +
	"\vSessionInfo\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12+\n" +
	"\x05paths\x18\x02 \x03(\v2\x15.kwik.common.PathInfoR\x05paths\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x04R\tcreatedAt\x12\x1b\n" +
	"\tis_client\x18\x04 \x01(\bR\bisClient\x12/\n" +
	"\x05state\x18\x05 \x01(\x0e2\x19.kwik.common.SessionStateR\x05state\x125\n" +
	"\ametrics\x18\x06 \x01(\v2\x1b.kwik.common.SessionMetricsR\ametrics\x122\n" +
	"\x06config\x18\a \x01(\v2\x1a.kwik.common.SessionConfigR\x06config\x12B\n" +
	"\bmetadata\x18\b \x03(\v2&.kwik.common.SessionInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x03\n" +
	"\x0eSessionMetrics\x12(\n" +
	"\x10total_bytes_sent\x18\x01 \x01(\x04R\x0etotalBytesSent\x120\n" +
	"\x14total_bytes_received\x18\x02 \x01(\x04R\x12totalBytesReceived\x12,\n" +
	"\x12total_packets_sent\x18\x03 \x01(\x04R\x10totalPacketsSent\x124\n" +
	"\x16total_packets_received\x18\x04 \x01(\x04R\x14totalPacketsReceived\x12%\n" +
	"\x0eactive_streams\x18\x05 \x01(\x04R\ractiveStreams\x122\n" +
	"\x15total_streams_created\x18\x06 \x01(\x04R\x13totalStreamsCreated\x12#\n" +
	"\rpath_switches\x18\a \x01(\x04R\fpathSwitches\x123\n" +
	"\x15connection_migrations\x18\b \x01(\x04R\x14connectionMigrations\x12?\n" +
	"\vaggregation\x18\t \x01(\v2\x1d.kwik.common.AggregationStatsR\vaggregation\"\xf7\x01\n" +
	"\x10AggregationStats\x12+\n" +
	"\x11frames_aggregated\x18\x01 \x01(\x04R\x10framesAggregated\x12-\n" +
	"\x12packets_aggregated\x18\x02 \x01(\x04R\x11packetsAggregated\x12%\n" +
	"\x0ereorder_events\x18\x03 \x01(\x04R\rreorderEvents\x12)\n" +
	"\x10duplicate_frames\x18\x04 \x01(\x04R\x0fduplicateFrames\x125\n" +
	"\x16aggregation_efficiency\x18\x05 \x01(\x02R\x15aggregationEfficiency\"\xd7\x02\n" +
	"\rSessionConfig\x12\x1b\n" +
	"\tmax_paths\x18\x01 \x01(\rR\bmaxPaths\x127\n" +
	"\x18optimal_streams_per_real\x18\x02 \x01(\rR\x15optimalStreamsPerReal\x12/\n" +
	"\x14max_streams_per_real\x18\x03 \x01(\rR\x11maxStreamsPerReal\x12!\n" +
	"\fidle_timeout\x18\x04 \x01(\x04R\vidleTimeout\x12&\n" +
	"\x0fmax_packet_size\x18\x05 \x01(\x04R\rmaxPacketSize\x12-\n" +
	"\x12enable_aggregation\x18\x06 \x01(\bR\x11enableAggregation\x12)\n" +
	"\x10enable_migration\x18\a \x01(\bR\x0fenableMigration\x12\x1a\n" +
	"\bfeatures\x18\b \x03(\tR\bfeatures\"\xee\x03\n" +
	"\n" +
	"StreamInfo\x12*\n" +
	"\x11logical_stream_id\x18\x01 \x01(\x04R\x0flogicalStreamId\x12\x17\n" +
	"\apath_id\x18\x02 \x01(\tR\x06pathId\x128\n" +
	"\vstream_type\x18\x03 \x01(\x0e2\x17.kwik.common.StreamTypeR\n" +
	"streamType\x12;\n" +
	"\fstream_state\x18\x04 \x01(\x0e2\x18.kwik.common.StreamStateR\vstreamState\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x05 \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x06 \x01(\x04R\rbytesReceived\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\x04R\tcreatedAt\x12#\n" +
	"\rlast_activity\x18\b \x01(\x04R\flastActivity\x12\x1a\n" +
	"\bpriority\x18\t \x01(\rR\bpriority\x12A\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2%.kwik.common.StreamInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x02\n" +
	"\tErrorInfo\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\tcomponent\x18\x03 \x01(\tR\tcomponent\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x12=\n" +
	"\acontext\x18\x05 \x03(\v2#.kwik.common.ErrorInfo.ContextEntryR\acontext\x126\n" +
	"\bseverity\x18\x06 \x01(\x0e2\x1a.kwik.common.ErrorSeverityR\bseverity\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x01\n" +
	"\vVersionInfo\x12\x14\n" +
	"\x05major\x18\x01 \x01(\rR\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\rR\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\rR\x05patch\x12\x14\n" +
	"\x05build\x18\x04 \x01(\tR\x05build\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\";\n" +
	"\tTimestamp\x12\x18\n" +
	"\aseconds\x18\x01 \x01(\x03R\aseconds\x12\x14\n" +
	"\x05nanos\x18\x02 \x01(\x05R\x05nanos\"\x87\x01\n" +
	"\vAddressInfo\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\x122\n" +
	"\x06family\x18\x03 \x01(\x0e2\x1a.kwik.common.AddressFamilyR\x06family\x12\x1c\n" +
	"\tinterface\x18\x04 \x01(\tR\tinterface\"\xef\x02\n" +
	"\fFeatureFlags\x12)\n" +
	"\x10enable_multipath\x18\x01 \x01(\bR\x0fenableMultipath\x12-\n" +
	"\x12enable_aggregation\x18\x02 \x01(\bR\x11enableAggregation\x12)\n" +
	"\x10enable_migration\x18\x03 \x01(\bR\x0fenableMigration\x12,\n" +
	"\x12enable_raw_packets\x18\x04 \x01(\bR\x10enableRawPackets\x12-\n" +
	"\x12enable_compression\x18\x05 \x01(\bR\x11enableCompression\x12+\n" +
	"\x11enable_encryption\x18\x06 \x01(\bR\x10enableEncryption\x12%\n" +
	"\x0eenable_metrics\x18\a \x01(\bR\renableMetrics\x12)\n" +
	"\x10enable_debugging\x18\b \x01(\bR\x0fenableDebugging\"\xba\x02\n" +
	"\vHealthCheck\x121\n" +
	"\x06status\x18\x01 \x01(\x0e2\x19.kwik.common.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12C\n" +
	"\x10component_health\x18\x04 \x03(\v2\x18.kwik.common.HealthCheckR\x0fcomponentHealth\x12?\n" +
	"\adetails\x18\x05 \x03(\v2%.kwik.common.HealthCheck.DetailsEntryR\adetails\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xa7\x01\n" +
	"\n" +
	"PathStatus\x12\x10\n" +
	"\fPATH_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vPATH_ACTIVE\x10\x01\x12\r\n" +
	"\tPATH_DEAD\x10\x02\x12\x13\n" +
	"\x0fPATH_CONNECTING\x10\x03\x12\x16\n" +
	"\x12PATH_DISCONNECTING\x10\x04\x12\x11\n" +
	"\rPATH_DEGRADED\x10\x05\x12\x13\n" +
	"\x0fPATH_RECOVERING\x10\x06\x12\x12\n" +
	"\x0ePATH_SUSPENDED\x10\a*A\n" +
	"\x13CongestionAlgorithm\x12\t\n" +
	"\x05CUBIC\x10\x00\x12\a\n" +
	"\x03BBR\x10\x01\x12\b\n" +
	"\x04RENO\x10\x02\x12\f\n" +
	"\bNEW_RENO\x10\x03*x\n" +
	"\fSessionState\x12\x18\n" +
	"\x14SESSION_INITIALIZING\x10\x00\x12\x12\n" +
	"\x0eSESSION_ACTIVE\x10\x01\x12\x13\n" +
	"\x0fSESSION_CLOSING\x10\x02\x12\x12\n" +
	"\x0eSESSION_CLOSED\x10\x03\x12\x11\n" +
	"\rSESSION_ERROR\x10\x04*f\n" +
	"\n" +
	"StreamType\x12\x18\n" +
	"\x14STREAM_BIDIRECTIONAL\x10\x00\x12\x19\n" +
	"\x15STREAM_UNIDIRECTIONAL\x10\x01\x12\x12\n" +
	"\x0eSTREAM_CONTROL\x10\x02\x12\x0f\n" +
	"\vSTREAM_DATA\x10\x03*\xb1\x01\n" +
	"\vStreamState\x12\x0f\n" +
	"\vSTREAM_IDLE\x10\x00\x12\x0f\n" +
	"\vSTREAM_OPEN\x10\x01\x12\x1c\n" +
	"\x18STREAM_HALF_CLOSED_LOCAL\x10\x02\x12\x1d\n" +
	"\x19STREAM_HALF_CLOSED_REMOTE\x10\x03\x12\x11\n" +
	"\rSTREAM_CLOSED\x10\x04\x12\x15\n" +
	"\x11STREAM_RESET_SENT\x10\x05\x12\x19\n" +
	"\x15STREAM_RESET_RECEIVED\x10\x06*w\n" +
	"\rErrorSeverity\x12\x11\n" +
	"\rSEVERITY_INFO\x10\x00\x12\x14\n" +
	"\x10SEVERITY_WARNING\x10\x01\x12\x12\n" +
	"\x0eSEVERITY_ERROR\x10\x02\x12\x15\n" +
	"\x11SEVERITY_CRITICAL\x10\x03\x12\x12\n" +
	"\x0eSEVERITY_FATAL\x10\x04*>\n" +
	"\rAddressFamily\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\b\n" +
	"\x04IPV4\x10\x01\x12\b\n" +
	"\x04IPV6\x10\x02\x12\b\n" +
	"\x04UNIX\x10\x03*a\n" +
	"\fHealthStatus\x12\x12\n" +
	"\x0eHEALTH_HEALTHY\x10\x00\x12\x13\n" +
	"\x0fHEALTH_DEGRADED\x10\x01\x12\x14\n" +
	"\x10HEALTH_UNHEALTHY\x10\x02\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x03B\x13Z\x11kwik/proto/commonb\x06proto3"

var (
	file_common_common_proto_rawDescOnce sync.Once
	file_common_common_proto_rawDescData []byte
)

func file_common_common_proto_rawDescGZIP() []byte {
	file_common_common_proto_rawDescOnce.Do(func() {
		file_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_common_proto_rawDesc), len(file_common_common_proto_rawDesc)))
	})
	return file_common_common_proto_rawDescData
}

var file_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_common_common_proto_goTypes = []any{
	(PathStatus)(0),          // 0: kwik.common.PathStatus
	(CongestionAlgorithm)(0), // 1: kwik.common.CongestionAlgorithm
	(SessionState)(0),        // 2: kwik.common.SessionState
	(StreamType)(0),          // 3: kwik.common.StreamType
	(StreamState)(0),         // 4: kwik.common.StreamState
	(ErrorSeverity)(0),       // 5: kwik.common.ErrorSeverity
	(AddressFamily)(0),       // 6: kwik.common.AddressFamily
	(HealthStatus)(0),        // 7: kwik.common.HealthStatus
	(*PathInfo)(nil),         // 8: kwik.common.PathInfo
	(*PathMetrics)(nil),      // 9: kwik.common.PathMetrics
	(*CongestionState)(nil),  // 10: kwik.common.CongestionState
	(*PathCapabilities)(nil), // 11: kwik.common.PathCapabilities
	(*SessionInfo)(nil),      // 12: kwik.common.SessionInfo
	(*SessionMetrics)(nil),   // 13: kwik.common.SessionMetrics
	(*AggregationStats)(nil), // 14: kwik.common.AggregationStats
	(*SessionConfig)(nil),    // 15: kwik.common.SessionConfig
	(*StreamInfo)(nil),       // 16: kwik.common.StreamInfo
	(*ErrorInfo)(nil),        // 17: kwik.common.ErrorInfo
	(*VersionInfo)(nil),      // 18: kwik.common.VersionInfo
	(*Timestamp)(nil),        // 19: kwik.common.Timestamp
	(*AddressInfo)(nil),      // 20: kwik.common.AddressInfo
	(*FeatureFlags)(nil),     // 21: kwik.common.FeatureFlags
	(*HealthCheck)(nil),      // 22: kwik.common.HealthCheck
	nil,                      // 23: kwik.common.PathInfo.MetadataEntry
	nil,                      // 24: kwik.common.SessionInfo.MetadataEntry
	nil,                      // 25: kwik.common.StreamInfo.MetadataEntry
	nil,                      // 26: kwik.common.ErrorInfo.ContextEntry
	nil,                      // 27: kwik.common.HealthCheck.DetailsEntry
}
var file_common_common_proto_depIdxs = []int32{
	0,  // 0: kwik.common.PathInfo.status:type_name -> kwik.common.PathStatus
	9,  // 1: kwik.common.PathInfo.metrics:type_name -> kwik.common.PathMetrics
	11, // 2: kwik.common.PathInfo.capabilities:type_name -> kwik.common.PathCapabilities
	23, // 3: kwik.common.PathInfo.metadata:type_name -> kwik.common.PathInfo.MetadataEntry
	10, // 4: kwik.common.PathMetrics.congestion:type_name -> kwik.common.CongestionState
	1,  // 5: kwik.common.CongestionState.algorithm:type_name -> kwik.common.CongestionAlgorithm
	8,  // 6: kwik.common.SessionInfo.paths:type_name -> kwik.common.PathInfo
	2,  // 7: kwik.common.SessionInfo.state:type_name -> kwik.common.SessionState
	13, // 8: kwik.common.SessionInfo.metrics:type_name -> kwik.common.SessionMetrics
	15, // 9: kwik.common.SessionInfo.config:type_name -> kwik.common.SessionConfig
	24, // 10: kwik.common.SessionInfo.metadata:type_name -> kwik.common.SessionInfo.MetadataEntry
	14, // 11: kwik.common.SessionMetrics.aggregation:type_name -> kwik.common.AggregationStats
	3,  // 12: kwik.common.StreamInfo.stream_type:type_name -> kwik.common.StreamType
	4,  // 13: kwik.common.StreamInfo.stream_state:type_name -> kwik.common.StreamState
	25, // 14: kwik.common.StreamInfo.metadata:type_name -> kwik.common.StreamInfo.MetadataEntry
	26, // 15: kwik.common.ErrorInfo.context:type_name -> kwik.common.ErrorInfo.ContextEntry
	5,  // 16: kwik.common.ErrorInfo.severity:type_name -> kwik.common.ErrorSeverity
	6,  // 17: kwik.common.AddressInfo.family:type_name -> kwik.common.AddressFamily
	7,  // 18: kwik.common.HealthCheck.status:type_name -> kwik.common.HealthStatus
	22, // 19: kwik.common.HealthCheck.component_health:type_name -> kwik.common.HealthCheck
	27, // 20: kwik.common.HealthCheck.details:type_name -> kwik.common.HealthCheck.DetailsEntry
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_common_common_proto_init() }
func file_common_common_proto_init() {
	if File_common_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_common_proto_rawDesc), len(file_common_common_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_proto_goTypes,
		DependencyIndexes: file_common_common_proto_depIdxs,
		EnumInfos:         file_common_common_proto_enumTypes,
		MessageInfos:      file_common_common_proto_msgTypes,
	}.Build()
	File_common_common_proto = out.File
	file_common_common_proto_goTypes = nil
	file_common_common_proto_depIdxs = nil
}
