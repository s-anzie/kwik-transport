// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.30.2
// source: proto/control/control.proto

package control

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Control frame types - all possible control operations
type ControlFrameType int32

const (
	ControlFrameType_ADD_PATH_REQUEST           ControlFrameType = 0
	ControlFrameType_ADD_PATH_RESPONSE          ControlFrameType = 1
	ControlFrameType_REMOVE_PATH_REQUEST        ControlFrameType = 2
	ControlFrameType_REMOVE_PATH_RESPONSE       ControlFrameType = 3
	ControlFrameType_PATH_STATUS_NOTIFICATION   ControlFrameType = 4
	ControlFrameType_AUTHENTICATION_REQUEST     ControlFrameType = 5
	ControlFrameType_AUTHENTICATION_RESPONSE    ControlFrameType = 6
	ControlFrameType_STREAM_CREATE_NOTIFICATION ControlFrameType = 7
	ControlFrameType_RAW_PACKET_TRANSMISSION    ControlFrameType = 8
	ControlFrameType_RAW_MESSAGE_REQUEST        ControlFrameType = 9
	ControlFrameType_RAW_MESSAGE_RESPONSE       ControlFrameType = 10
	ControlFrameType_HEARTBEAT                  ControlFrameType = 11
	ControlFrameType_SESSION_CLOSE              ControlFrameType = 12
	ControlFrameType_DATA_CHUNK_ACK             ControlFrameType = 13 // Ack for delivered data chunks (transparent to app)
)

// Enum value maps for ControlFrameType.
var (
	ControlFrameType_name = map[int32]string{
		0:  "ADD_PATH_REQUEST",
		1:  "ADD_PATH_RESPONSE",
		2:  "REMOVE_PATH_REQUEST",
		3:  "REMOVE_PATH_RESPONSE",
		4:  "PATH_STATUS_NOTIFICATION",
		5:  "AUTHENTICATION_REQUEST",
		6:  "AUTHENTICATION_RESPONSE",
		7:  "STREAM_CREATE_NOTIFICATION",
		8:  "RAW_PACKET_TRANSMISSION",
		9:  "RAW_MESSAGE_REQUEST",
		10: "RAW_MESSAGE_RESPONSE",
		11: "HEARTBEAT",
		12: "SESSION_CLOSE",
		13: "DATA_CHUNK_ACK",
	}
	ControlFrameType_value = map[string]int32{
		"ADD_PATH_REQUEST":           0,
		"ADD_PATH_RESPONSE":          1,
		"REMOVE_PATH_REQUEST":        2,
		"REMOVE_PATH_RESPONSE":       3,
		"PATH_STATUS_NOTIFICATION":   4,
		"AUTHENTICATION_REQUEST":     5,
		"AUTHENTICATION_RESPONSE":    6,
		"STREAM_CREATE_NOTIFICATION": 7,
		"RAW_PACKET_TRANSMISSION":    8,
		"RAW_MESSAGE_REQUEST":        9,
		"RAW_MESSAGE_RESPONSE":       10,
		"HEARTBEAT":                  11,
		"SESSION_CLOSE":              12,
		"DATA_CHUNK_ACK":             13,
	}
)

func (x ControlFrameType) Enum() *ControlFrameType {
	p := new(ControlFrameType)
	*p = x
	return p
}

func (x ControlFrameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlFrameType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_control_proto_enumTypes[0].Descriptor()
}

func (ControlFrameType) Type() protoreflect.EnumType {
	return &file_proto_control_control_proto_enumTypes[0]
}

func (x ControlFrameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlFrameType.Descriptor instead.
func (ControlFrameType) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{0}
}

// Path status enum - possible path states
type PathStatus int32

const (
	PathStatus_CONTROL_PATH_ACTIVE        PathStatus = 0
	PathStatus_CONTROL_PATH_DEAD          PathStatus = 1
	PathStatus_CONTROL_PATH_CONNECTING    PathStatus = 2
	PathStatus_CONTROL_PATH_DISCONNECTING PathStatus = 3
	PathStatus_CONTROL_PATH_DEGRADED      PathStatus = 4 // Path experiencing issues but still usable
	PathStatus_CONTROL_PATH_RECOVERING    PathStatus = 5 // Path recovering from issues
)

// Enum value maps for PathStatus.
var (
	PathStatus_name = map[int32]string{
		0: "CONTROL_PATH_ACTIVE",
		1: "CONTROL_PATH_DEAD",
		2: "CONTROL_PATH_CONNECTING",
		3: "CONTROL_PATH_DISCONNECTING",
		4: "CONTROL_PATH_DEGRADED",
		5: "CONTROL_PATH_RECOVERING",
	}
	PathStatus_value = map[string]int32{
		"CONTROL_PATH_ACTIVE":        0,
		"CONTROL_PATH_DEAD":          1,
		"CONTROL_PATH_CONNECTING":    2,
		"CONTROL_PATH_DISCONNECTING": 3,
		"CONTROL_PATH_DEGRADED":      4,
		"CONTROL_PATH_RECOVERING":    5,
	}
)

func (x PathStatus) Enum() *PathStatus {
	p := new(PathStatus)
	*p = x
	return p
}

func (x PathStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_control_proto_enumTypes[1].Descriptor()
}

func (PathStatus) Type() protoreflect.EnumType {
	return &file_proto_control_control_proto_enumTypes[1]
}

func (x PathStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathStatus.Descriptor instead.
func (PathStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{1}
}

// Session role enum - indicates whether this is a primary or secondary session
type SessionRole int32

const (
	SessionRole_PRIMARY   SessionRole = 0 // Primary session - main connection with full control capabilities
	SessionRole_SECONDARY SessionRole = 1 // Secondary session - auxiliary connection for data aggregation
)

// Enum value maps for SessionRole.
var (
	SessionRole_name = map[int32]string{
		0: "PRIMARY",
		1: "SECONDARY",
	}
	SessionRole_value = map[string]int32{
		"PRIMARY":   0,
		"SECONDARY": 1,
	}
)

func (x SessionRole) Enum() *SessionRole {
	p := new(SessionRole)
	*p = x
	return p
}

func (x SessionRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_control_proto_enumTypes[2].Descriptor()
}

func (SessionRole) Type() protoreflect.EnumType {
	return &file_proto_control_control_proto_enumTypes[2]
}

func (x SessionRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionRole.Descriptor instead.
func (SessionRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{2}
}

// Stream types
type StreamType int32

const (
	StreamType_CONTROL_STREAM_BIDIRECTIONAL  StreamType = 0
	StreamType_CONTROL_STREAM_UNIDIRECTIONAL StreamType = 1
	StreamType_CONTROL_STREAM_CONTROL        StreamType = 2
	StreamType_CONTROL_STREAM_DATA           StreamType = 3
)

// Enum value maps for StreamType.
var (
	StreamType_name = map[int32]string{
		0: "CONTROL_STREAM_BIDIRECTIONAL",
		1: "CONTROL_STREAM_UNIDIRECTIONAL",
		2: "CONTROL_STREAM_CONTROL",
		3: "CONTROL_STREAM_DATA",
	}
	StreamType_value = map[string]int32{
		"CONTROL_STREAM_BIDIRECTIONAL":  0,
		"CONTROL_STREAM_UNIDIRECTIONAL": 1,
		"CONTROL_STREAM_CONTROL":        2,
		"CONTROL_STREAM_DATA":           3,
	}
)

func (x StreamType) Enum() *StreamType {
	p := new(StreamType)
	*p = x
	return p
}

func (x StreamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_control_proto_enumTypes[3].Descriptor()
}

func (StreamType) Type() protoreflect.EnumType {
	return &file_proto_control_control_proto_enumTypes[3]
}

func (x StreamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamType.Descriptor instead.
func (StreamType) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{3}
}

// Control frame wrapper - main container for all control messages
type ControlFrame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       uint64                 `protobuf:"varint,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Type          ControlFrameType       `protobuf:"varint,2,opt,name=type,proto3,enum=kwik.control.ControlFrameType" json:"type,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SourcePathId  string                 `protobuf:"bytes,5,opt,name=source_path_id,json=sourcePathId,proto3" json:"source_path_id,omitempty"` // Path ID of sender
	TargetPathId  string                 `protobuf:"bytes,6,opt,name=target_path_id,json=targetPathId,proto3" json:"target_path_id,omitempty"` // Path ID of intended recipient
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlFrame) Reset() {
	*x = ControlFrame{}
	mi := &file_proto_control_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlFrame) ProtoMessage() {}

func (x *ControlFrame) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlFrame.ProtoReflect.Descriptor instead.
func (*ControlFrame) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{0}
}

func (x *ControlFrame) GetFrameId() uint64 {
	if x != nil {
		return x.FrameId
	}
	return 0
}

func (x *ControlFrame) GetType() ControlFrameType {
	if x != nil {
		return x.Type
	}
	return ControlFrameType_ADD_PATH_REQUEST
}

func (x *ControlFrame) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ControlFrame) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ControlFrame) GetSourcePathId() string {
	if x != nil {
		return x.SourcePathId
	}
	return ""
}

func (x *ControlFrame) GetTargetPathId() string {
	if x != nil {
		return x.TargetPathId
	}
	return ""
}

// Add path request - server requests client to connect to secondary server
type AddPathRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetAddress string                 `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"`                                            // Address of secondary server to connect to
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                        // Current session ID for authentication
	Priority      uint32                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`                                                                          // Path priority (0 = highest)
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional path metadata
	PathId        string                 `protobuf:"bytes,5,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`                                                                 // Server-generated path ID that client should use
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPathRequest) Reset() {
	*x = AddPathRequest{}
	mi := &file_proto_control_control_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPathRequest) ProtoMessage() {}

func (x *AddPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPathRequest.ProtoReflect.Descriptor instead.
func (*AddPathRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{1}
}

func (x *AddPathRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *AddPathRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AddPathRequest) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AddPathRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AddPathRequest) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

// Add path response - client responds with success/failure
type AddPathResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PathId           string                 `protobuf:"bytes,2,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`                                  // New path ID if successful
	ErrorMessage     string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                // Error details if failed
	ErrorCode        string                 `protobuf:"bytes,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`                         // Structured error code
	ConnectionTimeMs uint64                 `protobuf:"varint,5,opt,name=connection_time_ms,json=connectionTimeMs,proto3" json:"connection_time_ms,omitempty"` // Time taken to establish connection
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddPathResponse) Reset() {
	*x = AddPathResponse{}
	mi := &file_proto_control_control_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPathResponse) ProtoMessage() {}

func (x *AddPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPathResponse.ProtoReflect.Descriptor instead.
func (*AddPathResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{2}
}

func (x *AddPathResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddPathResponse) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *AddPathResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AddPathResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *AddPathResponse) GetConnectionTimeMs() uint64 {
	if x != nil {
		return x.ConnectionTimeMs
	}
	return 0
}

// Remove path request - server requests path removal
type RemovePathRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathId        string                 `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`                         // Reason for removal
	Graceful      bool                   `protobuf:"varint,3,opt,name=graceful,proto3" json:"graceful,omitempty"`                    // Whether to close gracefully
	TimeoutMs     uint32                 `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"` // Timeout for graceful close
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePathRequest) Reset() {
	*x = RemovePathRequest{}
	mi := &file_proto_control_control_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathRequest) ProtoMessage() {}

func (x *RemovePathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathRequest.ProtoReflect.Descriptor instead.
func (*RemovePathRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{3}
}

func (x *RemovePathRequest) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *RemovePathRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RemovePathRequest) GetGraceful() bool {
	if x != nil {
		return x.Graceful
	}
	return false
}

func (x *RemovePathRequest) GetTimeoutMs() uint32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

// Remove path response - client confirms path removal
type RemovePathResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	PathId          string                 `protobuf:"bytes,2,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	StreamsMigrated uint64                 `protobuf:"varint,4,opt,name=streams_migrated,json=streamsMigrated,proto3" json:"streams_migrated,omitempty"` // Number of streams migrated to other paths
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RemovePathResponse) Reset() {
	*x = RemovePathResponse{}
	mi := &file_proto_control_control_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathResponse) ProtoMessage() {}

func (x *RemovePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathResponse.ProtoReflect.Descriptor instead.
func (*RemovePathResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{4}
}

func (x *RemovePathResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RemovePathResponse) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *RemovePathResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RemovePathResponse) GetStreamsMigrated() uint64 {
	if x != nil {
		return x.StreamsMigrated
	}
	return 0
}

// Path status notification - notify peer of path status changes
type PathStatusNotification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathId        string                 `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`
	Status        PathStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=kwik.control.PathStatus" json:"status,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Timestamp     uint64                 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metrics       *PathMetrics           `protobuf:"bytes,5,opt,name=metrics,proto3" json:"metrics,omitempty"` // Current path performance metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathStatusNotification) Reset() {
	*x = PathStatusNotification{}
	mi := &file_proto_control_control_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathStatusNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathStatusNotification) ProtoMessage() {}

func (x *PathStatusNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathStatusNotification.ProtoReflect.Descriptor instead.
func (*PathStatusNotification) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{5}
}

func (x *PathStatusNotification) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *PathStatusNotification) GetStatus() PathStatus {
	if x != nil {
		return x.Status
	}
	return PathStatus_CONTROL_PATH_ACTIVE
}

func (x *PathStatusNotification) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PathStatusNotification) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PathStatusNotification) GetMetrics() *PathMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Path performance metrics
type PathMetrics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RttMs          uint64                 `protobuf:"varint,1,opt,name=rtt_ms,json=rttMs,proto3" json:"rtt_ms,omitempty"`                               // Round-trip time in milliseconds
	BandwidthBps   uint64                 `protobuf:"varint,2,opt,name=bandwidth_bps,json=bandwidthBps,proto3" json:"bandwidth_bps,omitempty"`          // Estimated bandwidth in bits per second
	PacketLossRate float32                `protobuf:"fixed32,3,opt,name=packet_loss_rate,json=packetLossRate,proto3" json:"packet_loss_rate,omitempty"` // Packet loss rate (0.0 to 1.0)
	BytesSent      uint64                 `protobuf:"varint,4,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`                   // Total bytes sent on this path
	BytesReceived  uint64                 `protobuf:"varint,5,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`       // Total bytes received on this path
	LastActivity   uint64                 `protobuf:"varint,6,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`          // Timestamp of last activity
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PathMetrics) Reset() {
	*x = PathMetrics{}
	mi := &file_proto_control_control_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathMetrics) ProtoMessage() {}

func (x *PathMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathMetrics.ProtoReflect.Descriptor instead.
func (*PathMetrics) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{6}
}

func (x *PathMetrics) GetRttMs() uint64 {
	if x != nil {
		return x.RttMs
	}
	return 0
}

func (x *PathMetrics) GetBandwidthBps() uint64 {
	if x != nil {
		return x.BandwidthBps
	}
	return 0
}

func (x *PathMetrics) GetPacketLossRate() float32 {
	if x != nil {
		return x.PacketLossRate
	}
	return 0
}

func (x *PathMetrics) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *PathMetrics) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *PathMetrics) GetLastActivity() uint64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

// Authentication request - authenticate on new path using existing session
type AuthenticationRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SessionId         string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Credentials       []byte                 `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`                                      // Authentication credentials
	ClientVersion     string                 `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`             // Client KWIK version
	SupportedFeatures []string               `protobuf:"bytes,4,rep,name=supported_features,json=supportedFeatures,proto3" json:"supported_features,omitempty"` // Supported KWIK features
	Role              SessionRole            `protobuf:"varint,5,opt,name=role,proto3,enum=kwik.control.SessionRole" json:"role,omitempty"`                     // Role of this session (PRIMARY or SECONDARY)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AuthenticationRequest) Reset() {
	*x = AuthenticationRequest{}
	mi := &file_proto_control_control_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationRequest) ProtoMessage() {}

func (x *AuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{7}
}

func (x *AuthenticationRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthenticationRequest) GetCredentials() []byte {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *AuthenticationRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *AuthenticationRequest) GetSupportedFeatures() []string {
	if x != nil {
		return x.SupportedFeatures
	}
	return nil
}

func (x *AuthenticationRequest) GetRole() SessionRole {
	if x != nil {
		return x.Role
	}
	return SessionRole_PRIMARY
}

// Authentication response - server responds to authentication
type AuthenticationResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SessionId       string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Confirmed session ID
	ErrorMessage    string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ServerVersion   string                 `protobuf:"bytes,4,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`       // Server KWIK version
	EnabledFeatures []string               `protobuf:"bytes,5,rep,name=enabled_features,json=enabledFeatures,proto3" json:"enabled_features,omitempty"` // Features enabled for this session
	SessionTimeout  uint64                 `protobuf:"varint,6,opt,name=session_timeout,json=sessionTimeout,proto3" json:"session_timeout,omitempty"`   // Session timeout in seconds
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthenticationResponse) Reset() {
	*x = AuthenticationResponse{}
	mi := &file_proto_control_control_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationResponse) ProtoMessage() {}

func (x *AuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{8}
}

func (x *AuthenticationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthenticationResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthenticationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AuthenticationResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *AuthenticationResponse) GetEnabledFeatures() []string {
	if x != nil {
		return x.EnabledFeatures
	}
	return nil
}

func (x *AuthenticationResponse) GetSessionTimeout() uint64 {
	if x != nil {
		return x.SessionTimeout
	}
	return 0
}

// Stream creation notification - notify peer of new logical stream
type StreamCreateNotification struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	LogicalStreamId uint64                 `protobuf:"varint,1,opt,name=logical_stream_id,json=logicalStreamId,proto3" json:"logical_stream_id,omitempty"`
	PathId          string                 `protobuf:"bytes,2,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`                                                                 // Path where stream was created
	StreamType      StreamType             `protobuf:"varint,3,opt,name=stream_type,json=streamType,proto3,enum=kwik.control.StreamType" json:"stream_type,omitempty"`                       // Type of stream
	Priority        uint32                 `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`                                                                          // Stream priority
	Metadata        map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Stream metadata
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StreamCreateNotification) Reset() {
	*x = StreamCreateNotification{}
	mi := &file_proto_control_control_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCreateNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCreateNotification) ProtoMessage() {}

func (x *StreamCreateNotification) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCreateNotification.ProtoReflect.Descriptor instead.
func (*StreamCreateNotification) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{9}
}

func (x *StreamCreateNotification) GetLogicalStreamId() uint64 {
	if x != nil {
		return x.LogicalStreamId
	}
	return 0
}

func (x *StreamCreateNotification) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *StreamCreateNotification) GetStreamType() StreamType {
	if x != nil {
		return x.StreamType
	}
	return StreamType_CONTROL_STREAM_BIDIRECTIONAL
}

func (x *StreamCreateNotification) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *StreamCreateNotification) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Raw packet transmission - send raw data through specific path
type RawPacketTransmission struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Data           []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	TargetPathId   string                 `protobuf:"bytes,2,opt,name=target_path_id,json=targetPathId,proto3" json:"target_path_id,omitempty"`       // Path to send data through
	SourceServerId string                 `protobuf:"bytes,3,opt,name=source_server_id,json=sourceServerId,proto3" json:"source_server_id,omitempty"` // ID of sending server
	ProtocolHint   string                 `protobuf:"bytes,4,opt,name=protocol_hint,json=protocolHint,proto3" json:"protocol_hint,omitempty"`         // Hint about the protocol of raw data
	PreserveOrder  bool                   `protobuf:"varint,5,opt,name=preserve_order,json=preserveOrder,proto3" json:"preserve_order,omitempty"`     // Whether to preserve packet order
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RawPacketTransmission) Reset() {
	*x = RawPacketTransmission{}
	mi := &file_proto_control_control_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawPacketTransmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawPacketTransmission) ProtoMessage() {}

func (x *RawPacketTransmission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawPacketTransmission.ProtoReflect.Descriptor instead.
func (*RawPacketTransmission) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{10}
}

func (x *RawPacketTransmission) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RawPacketTransmission) GetTargetPathId() string {
	if x != nil {
		return x.TargetPathId
	}
	return ""
}

func (x *RawPacketTransmission) GetSourceServerId() string {
	if x != nil {
		return x.SourceServerId
	}
	return ""
}

func (x *RawPacketTransmission) GetProtocolHint() string {
	if x != nil {
		return x.ProtocolHint
	}
	return ""
}

func (x *RawPacketTransmission) GetPreserveOrder() bool {
	if x != nil {
		return x.PreserveOrder
	}
	return false
}

// Raw message request - server requests client to send raw message to secondary server
type RawMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetAddress string                 `protobuf:"bytes,1,opt,name=target_address,json=targetAddress,proto3" json:"target_address,omitempty"` // Address of target server (e.g., "localhost:4434")
	MessageData   []byte                 `protobuf:"bytes,2,opt,name=message_data,json=messageData,proto3" json:"message_data,omitempty"`       // Raw message data to send
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`             // Unique message identifier
	MessageType   string                 `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`       // Type of message (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawMessageRequest) Reset() {
	*x = RawMessageRequest{}
	mi := &file_proto_control_control_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessageRequest) ProtoMessage() {}

func (x *RawMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessageRequest.ProtoReflect.Descriptor instead.
func (*RawMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{11}
}

func (x *RawMessageRequest) GetTargetAddress() string {
	if x != nil {
		return x.TargetAddress
	}
	return ""
}

func (x *RawMessageRequest) GetMessageData() []byte {
	if x != nil {
		return x.MessageData
	}
	return nil
}

func (x *RawMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RawMessageRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

// Raw message response - confirmation that raw message was processed
type RawMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`          // Original message identifier
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                              // Whether message was sent successfully
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Error message if failed
	ResponseData  []byte                 `protobuf:"bytes,4,opt,name=response_data,json=responseData,proto3" json:"response_data,omitempty"` // Optional response data from secondary server
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawMessageResponse) Reset() {
	*x = RawMessageResponse{}
	mi := &file_proto_control_control_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessageResponse) ProtoMessage() {}

func (x *RawMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessageResponse.ProtoReflect.Descriptor instead.
func (*RawMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{12}
}

func (x *RawMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RawMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RawMessageResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RawMessageResponse) GetResponseData() []byte {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

// Heartbeat message - keep paths alive and measure performance
type Heartbeat struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SequenceNumber uint64                 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Timestamp      uint64                 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EchoData       []byte                 `protobuf:"bytes,3,opt,name=echo_data,json=echoData,proto3" json:"echo_data,omitempty"` // Data to be echoed back
	CurrentMetrics *PathMetrics           `protobuf:"bytes,4,opt,name=current_metrics,json=currentMetrics,proto3" json:"current_metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_proto_control_control_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{13}
}

func (x *Heartbeat) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Heartbeat) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Heartbeat) GetEchoData() []byte {
	if x != nil {
		return x.EchoData
	}
	return nil
}

func (x *Heartbeat) GetCurrentMetrics() *PathMetrics {
	if x != nil {
		return x.CurrentMetrics
	}
	return nil
}

// Session close notification - gracefully close entire session
type SessionClose struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Reason         string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	TimeoutMs      uint32                 `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`                // Time to wait before force close
	MigrateStreams bool                   `protobuf:"varint,3,opt,name=migrate_streams,json=migrateStreams,proto3" json:"migrate_streams,omitempty"` // Whether to attempt stream migration
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SessionClose) Reset() {
	*x = SessionClose{}
	mi := &file_proto_control_control_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionClose) ProtoMessage() {}

func (x *SessionClose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionClose.ProtoReflect.Descriptor instead.
func (*SessionClose) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{14}
}

func (x *SessionClose) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SessionClose) GetTimeoutMs() uint32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *SessionClose) GetMigrateStreams() bool {
	if x != nil {
		return x.MigrateStreams
	}
	return false
}

// DataChunkAck - acknowledgment for a delivered data chunk (transparent to application)
type DataChunkAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathId        string                 `protobuf:"bytes,1,opt,name=path_id,json=pathId,proto3" json:"path_id,omitempty"`                      // Path on which data was delivered
	KwikStreamId  uint64                 `protobuf:"varint,2,opt,name=kwik_stream_id,json=kwikStreamId,proto3" json:"kwik_stream_id,omitempty"` // KWIK logical stream ID at client
	ChunkId       uint32                 `protobuf:"varint,3,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`                  // Application-level chunk identifier (if available)
	Offset        uint64                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                                   // Aggregated stream offset where chunk starts
	Size          uint32                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                       // Size of data delivered
	Timestamp     uint64                 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // Ack timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunkAck) Reset() {
	*x = DataChunkAck{}
	mi := &file_proto_control_control_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunkAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunkAck) ProtoMessage() {}

func (x *DataChunkAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_control_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunkAck.ProtoReflect.Descriptor instead.
func (*DataChunkAck) Descriptor() ([]byte, []int) {
	return file_proto_control_control_proto_rawDescGZIP(), []int{15}
}

func (x *DataChunkAck) GetPathId() string {
	if x != nil {
		return x.PathId
	}
	return ""
}

func (x *DataChunkAck) GetKwikStreamId() uint64 {
	if x != nil {
		return x.KwikStreamId
	}
	return 0
}

func (x *DataChunkAck) GetChunkId() uint32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *DataChunkAck) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DataChunkAck) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DataChunkAck) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_proto_control_control_proto protoreflect.FileDescriptor

const file_proto_control_control_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/control/control.proto\x12\fkwik.control\"\xe1\x01\n" +
	"\fControlFrame\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\x04R\aframeId\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.kwik.control.ControlFrameTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x12$\n" +
	"\x0esource_path_id\x18\x05 \x01(\tR\fsourcePathId\x12$\n" +
	"\x0etarget_path_id\x18\x06 \x01(\tR\ftargetPathId\"\x90\x02\n" +
	"\x0eAddPathRequest\x12%\n" +
	"\x0etarget_address\x18\x01 \x01(\tR\rtargetAddress\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\rR\bpriority\x12F\n" +
	"\bmetadata\x18\x04 \x03(\v2*.kwik.control.AddPathRequest.MetadataEntryR\bmetadata\x12\x17\n" +
	"\apath_id\x18\x05 \x01(\tR\x06pathId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x01\n" +
	"\x0fAddPathResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\apath_id\x18\x02 \x01(\tR\x06pathId\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x04 \x01(\tR\terrorCode\x12,\n" +
	"\x12connection_time_ms\x18\x05 \x01(\x04R\x10connectionTimeMs\"\x7f\n" +
	"\x11RemovePathRequest\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12\x1a\n" +
	"\bgraceful\x18\x03 \x01(\bR\bgraceful\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\rR\ttimeoutMs\"\x97\x01\n" +
	"\x12RemovePathResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\apath_id\x18\x02 \x01(\tR\x06pathId\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12)\n" +
	"\x10streams_migrated\x18\x04 \x01(\x04R\x0fstreamsMigrated\"\xce\x01\n" +
	"\x16PathStatusNotification\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x120\n" +
	"\x06status\x18\x02 \x01(\x0e2\x18.kwik.control.PathStatusR\x06status\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x04R\ttimestamp\x123\n" +
	"\ametrics\x18\x05 \x01(\v2\x19.kwik.control.PathMetricsR\ametrics\"\xde\x01\n" +
	"\vPathMetrics\x12\x15\n" +
	"\x06rtt_ms\x18\x01 \x01(\x04R\x05rttMs\x12#\n" +
	"\rbandwidth_bps\x18\x02 \x01(\x04R\fbandwidthBps\x12(\n" +
	"\x10packet_loss_rate\x18\x03 \x01(\x02R\x0epacketLossRate\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\x04 \x01(\x04R\tbytesSent\x12%\n" +
	"\x0ebytes_received\x18\x05 \x01(\x04R\rbytesReceived\x12#\n" +
	"\rlast_activity\x18\x06 \x01(\x04R\flastActivity\"\xdd\x01\n" +
	"\x15AuthenticationRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12 \n" +
	"\vcredentials\x18\x02 \x01(\fR\vcredentials\x12%\n" +
	"\x0eclient_version\x18\x03 \x01(\tR\rclientVersion\x12-\n" +
	"\x12supported_features\x18\x04 \x03(\tR\x11supportedFeatures\x12-\n" +
	"\x04role\x18\x05 \x01(\x0e2\x19.kwik.control.SessionRoleR\x04role\"\xf1\x01\n" +
	"\x16AuthenticationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12%\n" +
	"\x0eserver_version\x18\x04 \x01(\tR\rserverVersion\x12)\n" +
	"\x10enabled_features\x18\x05 \x03(\tR\x0fenabledFeatures\x12'\n" +
	"\x0fsession_timeout\x18\x06 \x01(\x04R\x0esessionTimeout\"\xc5\x02\n" +
	"\x18StreamCreateNotification\x12*\n" +
	"\x11logical_stream_id\x18\x01 \x01(\x04R\x0flogicalStreamId\x12\x17\n" +
	"\apath_id\x18\x02 \x01(\tR\x06pathId\x129\n" +
	"\vstream_type\x18\x03 \x01(\x0e2\x18.kwik.control.StreamTypeR\n" +
	"streamType\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\rR\bpriority\x12P\n" +
	"\bmetadata\x18\x05 \x03(\v24.kwik.control.StreamCreateNotification.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc7\x01\n" +
	"\x15RawPacketTransmission\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12$\n" +
	"\x0etarget_path_id\x18\x02 \x01(\tR\ftargetPathId\x12(\n" +
	"\x10source_server_id\x18\x03 \x01(\tR\x0esourceServerId\x12#\n" +
	"\rprotocol_hint\x18\x04 \x01(\tR\fprotocolHint\x12%\n" +
	"\x0epreserve_order\x18\x05 \x01(\bR\rpreserveOrder\"\x9f\x01\n" +
	"\x11RawMessageRequest\x12%\n" +
	"\x0etarget_address\x18\x01 \x01(\tR\rtargetAddress\x12!\n" +
	"\fmessage_data\x18\x02 \x01(\fR\vmessageData\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\tR\vmessageType\"\x97\x01\n" +
	"\x12RawMessageResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12#\n" +
	"\rresponse_data\x18\x04 \x01(\fR\fresponseData\"\xb3\x01\n" +
	"\tHeartbeat\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x04R\x0esequenceNumber\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x04R\ttimestamp\x12\x1b\n" +
	"\techo_data\x18\x03 \x01(\fR\bechoData\x12B\n" +
	"\x0fcurrent_metrics\x18\x04 \x01(\v2\x19.kwik.control.PathMetricsR\x0ecurrentMetrics\"n\n" +
	"\fSessionClose\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x02 \x01(\rR\ttimeoutMs\x12'\n" +
	"\x0fmigrate_streams\x18\x03 \x01(\bR\x0emigrateStreams\"\xb2\x01\n" +
	"\fDataChunkAck\x12\x17\n" +
	"\apath_id\x18\x01 \x01(\tR\x06pathId\x12$\n" +
	"\x0ekwik_stream_id\x18\x02 \x01(\x04R\fkwikStreamId\x12\x19\n" +
	"\bchunk_id\x18\x03 \x01(\rR\achunkId\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x04R\x06offset\x12\x12\n" +
	"\x04size\x18\x05 \x01(\rR\x04size\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x04R\ttimestamp*\xef\x02\n" +
	"\x10ControlFrameType\x12\x14\n" +
	"\x10ADD_PATH_REQUEST\x10\x00\x12\x15\n" +
	"\x11ADD_PATH_RESPONSE\x10\x01\x12\x17\n" +
	"\x13REMOVE_PATH_REQUEST\x10\x02\x12\x18\n" +
	"\x14REMOVE_PATH_RESPONSE\x10\x03\x12\x1c\n" +
	"\x18PATH_STATUS_NOTIFICATION\x10\x04\x12\x1a\n" +
	"\x16AUTHENTICATION_REQUEST\x10\x05\x12\x1b\n" +
	"\x17AUTHENTICATION_RESPONSE\x10\x06\x12\x1e\n" +
	"\x1aSTREAM_CREATE_NOTIFICATION\x10\a\x12\x1b\n" +
	"\x17RAW_PACKET_TRANSMISSION\x10\b\x12\x17\n" +
	"\x13RAW_MESSAGE_REQUEST\x10\t\x12\x18\n" +
	"\x14RAW_MESSAGE_RESPONSE\x10\n" +
	"\x12\r\n" +
	"\tHEARTBEAT\x10\v\x12\x11\n" +
	"\rSESSION_CLOSE\x10\f\x12\x12\n" +
	"\x0eDATA_CHUNK_ACK\x10\r*\xb1\x01\n" +
	"\n" +
	"PathStatus\x12\x17\n" +
	"\x13CONTROL_PATH_ACTIVE\x10\x00\x12\x15\n" +
	"\x11CONTROL_PATH_DEAD\x10\x01\x12\x1b\n" +
	"\x17CONTROL_PATH_CONNECTING\x10\x02\x12\x1e\n" +
	"\x1aCONTROL_PATH_DISCONNECTING\x10\x03\x12\x19\n" +
	"\x15CONTROL_PATH_DEGRADED\x10\x04\x12\x1b\n" +
	"\x17CONTROL_PATH_RECOVERING\x10\x05*)\n" +
	"\vSessionRole\x12\v\n" +
	"\aPRIMARY\x10\x00\x12\r\n" +
	"\tSECONDARY\x10\x01*\x86\x01\n" +
	"\n" +
	"StreamType\x12 \n" +
	"\x1cCONTROL_STREAM_BIDIRECTIONAL\x10\x00\x12!\n" +
	"\x1dCONTROL_STREAM_UNIDIRECTIONAL\x10\x01\x12\x1a\n" +
	"\x16CONTROL_STREAM_CONTROL\x10\x02\x12\x17\n" +
	"\x13CONTROL_STREAM_DATA\x10\x03B\x14Z\x12kwik/proto/controlb\x06proto3"

var (
	file_proto_control_control_proto_rawDescOnce sync.Once
	file_proto_control_control_proto_rawDescData []byte
)

func file_proto_control_control_proto_rawDescGZIP() []byte {
	file_proto_control_control_proto_rawDescOnce.Do(func() {
		file_proto_control_control_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_control_control_proto_rawDesc), len(file_proto_control_control_proto_rawDesc)))
	})
	return file_proto_control_control_proto_rawDescData
}

var file_proto_control_control_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_control_control_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_control_control_proto_goTypes = []any{
	(ControlFrameType)(0),            // 0: kwik.control.ControlFrameType
	(PathStatus)(0),                  // 1: kwik.control.PathStatus
	(SessionRole)(0),                 // 2: kwik.control.SessionRole
	(StreamType)(0),                  // 3: kwik.control.StreamType
	(*ControlFrame)(nil),             // 4: kwik.control.ControlFrame
	(*AddPathRequest)(nil),           // 5: kwik.control.AddPathRequest
	(*AddPathResponse)(nil),          // 6: kwik.control.AddPathResponse
	(*RemovePathRequest)(nil),        // 7: kwik.control.RemovePathRequest
	(*RemovePathResponse)(nil),       // 8: kwik.control.RemovePathResponse
	(*PathStatusNotification)(nil),   // 9: kwik.control.PathStatusNotification
	(*PathMetrics)(nil),              // 10: kwik.control.PathMetrics
	(*AuthenticationRequest)(nil),    // 11: kwik.control.AuthenticationRequest
	(*AuthenticationResponse)(nil),   // 12: kwik.control.AuthenticationResponse
	(*StreamCreateNotification)(nil), // 13: kwik.control.StreamCreateNotification
	(*RawPacketTransmission)(nil),    // 14: kwik.control.RawPacketTransmission
	(*RawMessageRequest)(nil),        // 15: kwik.control.RawMessageRequest
	(*RawMessageResponse)(nil),       // 16: kwik.control.RawMessageResponse
	(*Heartbeat)(nil),                // 17: kwik.control.Heartbeat
	(*SessionClose)(nil),             // 18: kwik.control.SessionClose
	(*DataChunkAck)(nil),             // 19: kwik.control.DataChunkAck
	nil,                              // 20: kwik.control.AddPathRequest.MetadataEntry
	nil,                              // 21: kwik.control.StreamCreateNotification.MetadataEntry
}
var file_proto_control_control_proto_depIdxs = []int32{
	0,  // 0: kwik.control.ControlFrame.type:type_name -> kwik.control.ControlFrameType
	20, // 1: kwik.control.AddPathRequest.metadata:type_name -> kwik.control.AddPathRequest.MetadataEntry
	1,  // 2: kwik.control.PathStatusNotification.status:type_name -> kwik.control.PathStatus
	10, // 3: kwik.control.PathStatusNotification.metrics:type_name -> kwik.control.PathMetrics
	2,  // 4: kwik.control.AuthenticationRequest.role:type_name -> kwik.control.SessionRole
	3,  // 5: kwik.control.StreamCreateNotification.stream_type:type_name -> kwik.control.StreamType
	21, // 6: kwik.control.StreamCreateNotification.metadata:type_name -> kwik.control.StreamCreateNotification.MetadataEntry
	10, // 7: kwik.control.Heartbeat.current_metrics:type_name -> kwik.control.PathMetrics
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_control_control_proto_init() }
func file_proto_control_control_proto_init() {
	if File_proto_control_control_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_control_control_proto_rawDesc), len(file_proto_control_control_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_control_control_proto_goTypes,
		DependencyIndexes: file_proto_control_control_proto_depIdxs,
		EnumInfos:         file_proto_control_control_proto_enumTypes,
		MessageInfos:      file_proto_control_control_proto_msgTypes,
	}.Build()
	File_proto_control_control_proto = out.File
	file_proto_control_control_proto_goTypes = nil
	file_proto_control_control_proto_depIdxs = nil
}
